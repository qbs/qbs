/****************************************************************************
**
** Copyright (C) 2025 Janet Black.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype installpaths
    \inqmlmodule QbsModules
    \since Qbs 3.1

    \brief Provides properties for install directories.

    The \c installpaths module contains properties indicating directories where
    files should be installed to in a manner allowing distributors to make necessary
    adjustments.

    Example usage:
    \code
    qbs modules.installPaths.libexec:lib64/libexec
    \endcode

    \note On Debian-like Linux distributions, this module also provides some convenience
    auto-detection mechanism using the \c dpkg-architecture tool: If installPaths::autotedect
    is true, \QBS will query the library paths from the system.
*/

/*!
    \qmlproperty string installpaths::autotedect

    Whether to try autodetecting paths using system tools.

    This property has an effect only on Debian-like Linux systems.

    \defaultvalue \c false
*/

/*!
    \qmlproperty string installpaths::applications

    The location where to install applictaton bundles on Apple platforms.

    \defaultvalue \c "Applications"
*/

/*!
    \qmlproperty string installpaths::bin

    The location where to install binaries.

    \defaultvalue \c "bin"
*/

/*!
    \qmlproperty string installpaths::etc

    The location where to install configs.

    \defaultvalue \c "etc"
*/

/*!
    \qmlproperty string installpaths::frameworks

    The location where to install Frameworks on Apple platforms.

    \defaultvalue \c "Library/Frameworks"
*/

/*!
    \qmlproperty string installpaths::include

    The location where to install include files.

    \defaultvalue \c "include"
*/

/*!
    \qmlproperty string installpaths::lib

    The location where to install libraries.

    \defaultvalue \c "lib"
*/

/*!
    \qmlproperty string installpaths::libexec

    The location where to install additional executables.

    \defaultvalue \c{"libexec/"} + \l{subdir}
*/

/*!
    \qmlproperty string installpaths::library

    The location where to install support files on Apple platforms.

    \defaultvalue \c "Library"
*/

/*!
    \qmlproperty string installpaths::loadableModules

    The location where to install loadable modules (bundle plugins) on Apple platforms.

    \defaultvalue \c "Library/<ProjectName>/PlugIns"
*/

/*!
    \qmlproperty string installpaths::subdir

    The additional directory appended to the libexec, share and plugins paths.

    \defaultvalue lower-case \l{Project::name}{Project.name}
*/

/*!
    \qmlproperty string installpaths::plugins

    The location where to install plugins.

    On Apple platforms, non-bundle loadable modules are also installed here.

    \defaultvalue \l{lib} + \c{"/"} + \l{subdir} + \c{"/plugins"}
*/

/*!
    \qmlproperty string installpaths::share

    The location where to install resources.

    \defaultvalue \c{"share/"} + \l{subdir}
*/
